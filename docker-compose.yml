services:
  vet:
    build:
      context: ./vet
      dockerfile: ./Dockerfile
    environment:
      - DATABASE_URL=postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}/${PG_NAME}?schema=public
    ports:
      - "3000:3000"
    depends_on:
      - postgres

  payment:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PORT=3002
    ports:
      - "3002:3002"

  cart:
    build:
      context: ./cart-service
      dockerfile: docker/node/Dockerfile
    environment:
      - DATABASE_URL=postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}/${PG_NAME}?schema=public
      - PORT=3003
    ports:
      - "3003:3003"
    depends_on:
      - postgres

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}/${PG_NAME}?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - PORT=3004
    ports:
      - "3004:3004"
    depends_on:
      - postgres
    restart: always

  token:
    build:
      context: ./token
      dockerfile: Dockerfile
    environment:
      - PORT=3005
    ports:
      - "3005:3005"
    restart: always

  postgres:
    image: postgres:13.16-alpine
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_NAME}
    volumes:
      - postgres_data:/data/db
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  postgres_data:
    driver: local
